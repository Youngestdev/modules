/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * @filename - CurlCore.sim
 * @author - Azeez Adewale
 * @date - 26 Febuary 2017
 * @Time - 11:44 AM
 */
 
module simple.internet.curl

#Call all the low level function of the @DynamicModule networker
call "simple/core/DynamicLoader.sim" ? simple.core
callModule("dynamic_modules\networker\dist\Debug\MinGW-Windows\networker.dll")

#The @Class CurlCore is the base class for all the curl module and
#classes holding mainly the parenting Blocks and the curl pointer
#for each instance of the curl classes or object initiated
#@Note if you are really the whiz type you can look into the 
#@DynamicModule networker and use all the low-level functions 
#directly from C which i believe is faster but hard but also simple 
#as it usage is similar to the [[PHP][https://php.com]] curl module 
class CurlCore

	/* TYPE */
	CURLPOINTER = null #initialize the curl pointer with null
	
	#Initialize the curl pointer with the @LowLevelFunction 
	#__curl_easy_init() to create an instance of the curl object
	#all classes that are inheriting this class must call this block
	#to avoid the pointer to be initialize and avoid null error
	block initCurl()
		CURLPOINTER = __curl_easy_init()
	
	#Assign a custom pointer to the curl object. The old pointer is 
	#freed from the memory and the new pointer is assigned during the 
	#process the @Class CurlCore losses all it @Bold pointer @EndBold
	#functions and object such as curl list, headers and others and 
	#it takes all the objects and attributes of the newly assigned 
	#pointer
	block setCurlPointer(pointer)
		#garbageCollect(CURLPOINTER)
		CURLPOINTER = pointer
	
	#Set an option for the curl object. The options can range from
	#header,crumbs,data,url,file and other curl objects along with 
	#their curl option from the @File CurlOption or Integer value
	block addOption(option, value)
		try 
			a = "" + value 
			add__option(option,value)
			a = null
		catch
			for a = 0 to lengthOf(value)
				add__option(option,value[a])
			end
		end
		
	#Get the current pointer of the @Class CurlCore 
	#@Return the curl pointer @DataType POINTER
	block getCurlPointer()
		return CURLPOINTER
		
	block flush()
		
	
	#All the private objects,attributes and blocks exclusive to this
	#class alone are declared below
	private 	
		
		#set the curl option with value
		block add__option(option,value)
			__curl_easy_setopt(CURLPOINTER, option, value)