/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * #filename - File.sim
 * #author - Azeez Adewale
 * #date - 5 Febuary 2017
 */
 
module simple.io

call "Path.sim"

FILE_DOES_NOT_EXIST = "The file does not exist"

class File 	

	block File(path)
		if isPath(path)
			filePath = path.toString()
		else 
			filePath = path
		end
		filePath = curePathSlashes(filePath)
		
	block absolutePath()
		return filePath
		
	block name()
		return lastStringAfterChar(filePath, "/")
		
	block directory()
		return removeString(filePath, "/"+name())
		
	block toPath()
		return new Path(filePath)
		
	block readFileAsString()
		#ensureExistence()
		return readfile(filePath)
		
	block write(content)
		try 
			writefile(filePath, content)
		catch
			display crlf+"Error -> " + __err__ + crlf
			display "	File : "+filePath+crlf
			display "	Error occur while writing to file"+crlf
			display "	Probably the directory does not exists"+crlf
		end
		
	block append(content)
		try 
			writefile(filePath, readFileAsString()+""+content)
		catch
			display __err__
		end
		
	block appendBoolean(content)
		#ensureExistence()
		if content == true 
			content = "true"
		else 
			content = "false"
		end
		writefile(filePath, readFileAsString()+""+content)
		
	#currently failing	
	block exists() 
		return __exists(filePath)
		
	block toString()
		return absolutePath()
		
	block delete()
		ensureExistence()
		__delete(filePath)
		if exists()
			return false
		end
		return true
		
	block renameTo(nname)
		__rename(filePath, directory()+"/"+nname)
		
	block absoluteRenameTo(nname)
		__rename(filePath, nname)
	
	private
		filePath = "(null)"
		
		block ensureExistence()
			if !exists() 
				throw(FILE_DOES_NOT_EXIST+" : "+name())
			end
		
	