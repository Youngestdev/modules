/* 
	Copyright (c) 2016-2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * #filename - Console.sim
 * #author - thecarisma
 * #date - 5 Febuary 2017
 */
 
module simple.utilities

call "ConsoleColor.sim" ? simple.utilities

#Console is initialized as a variable in order to allow usage as Console.block()
Console = new Console

#a character that move caret to start of line or simply clear line
$__clearLine = char(13)

#the console class for various console blocks and functions
class Console 

	#prints string content with new line
	block println(content) 
		print(content+crlf) 
	
	#prints string content
	block print(content)
		display formatLiteral(content)
	
	#prints the string content in one line from start 'use with caution'
	block printinLine(content)
		print($__clearLine+content)
		
	#read input from the console  with a custom title
	block readLine(title)
		print(title) 
		read readContent 
		return readContent
	
	#read input from the console 
	block readln()
		read readContent
		return readContent
	
	#set the foregroundColor to using colorPrint and colorPrintln
	block setForeground(color)
		foregroundColor = color
	
	#set the backgroungColor to using colorPrint and colorPrintln
	block setBackground(color)
		backgroundColor = color
		
	#prints the string in respect to the FG and BG colors
	block colorPrint(content)
		__printwfb(foregroundColor, backgroundColor, formatLiteral(content))
	
	#prints the string in respect to the FG and BG colors with new line
	block colorPrintln(content)
		__printwfb(foregroundColor, backgroundColor, formatLiteral(content)+crlf)
	
	#print with a custom FG and present backgroundColor
	block printWithFG(color, content)
		ade = formatLiteral(content)
		__printwfb(color, backgroundColor, ade)
	
	#print with a custom BG and present foregroundColor
	block printWithBG(color, content)
		__printwfb(foregroundColor, color, formatLiteral(content))
	
	#print with a custom FG and BG
	block printWithFGBG(fcolor, bcolor, content)
		__printwfb(fcolor, bcolor, formatLiteral(content))
		
	#reset the console colors which is none by default		
	block resetColor()
		foregroundColor = ConsoleColor.NONE()
		backgroundColor = ConsoleColor.NONE()	

	#prints a plain line on the console/terminal	
	block printLine()
		print(consoleLine)
	
	#prints a plain line on the console/terminal with custom foreground and background
	block printLineWithColor(fg,bg)
		if fg ==  null fb = ConsoleColor.NONE() end
		if bg ==  null bb = ConsoleColor.NONE() end
		__printwfb(fg, bg, consoleLine)
	
	private 
		foregroundColor = ConsoleColor.NONE()
		backgroundColor = ConsoleColor.NONE()
		consoleLine = "========================================================================================================================"+crlf
		
		#by default all escape character is not supported 
		#this block formatLiteral(content) allows for escape character supports
		block formatLiteral(content)
			inContent = ""
			/*if isnumber(content) 
				content = ""+content
			end*/#to uncomment after building core module
			a = 0
			do {
				switch content[a]
					case '\'
						a++
						switch content[a]
						case '\'
							inContent +=  '\'
						case '"'
							inContent += '"'
						case "n"
							inContent +=  crlf
						case "t"
							inContent +=  char(9)
						case "r" 
							inContent +=  char(13)
						end
					default 
						inContent +=  content[a]
				end
			} while (content[a] != '\0')
			return inContent
	
	