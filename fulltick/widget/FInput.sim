/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 SIMPLE

*/

/* 
 * @Filename - FInput.sim
 * @Author - Azeez Adewale
 * @Date - 27 Febuary 2018
 * @Time - 02:54 PM
 */

module fulltick.widget

#call the @Class FWidget File for blocks inheritance
call "fulltick/painting/FColor.sim" ? fulltick.painting
call "fulltick/core/FWidget.sim" ? fulltick.widget


class FInput : FWidget

	WIDGET_WIDTH = 300 #Change the default width 
	WIDGET_HEIGHT = 30 #Change the default height 
	WIDGET_Y = 10 #The default was change from zero to 10 but the position can be changed anytime
	WIDGET_CURSOR_COLOR = new FColor #the default caret/cursor color is black

	#Initialize the @Class FInput widget 
	block FInput()
		initialize()
		
	#The block act same as the @Block setLabel(label) for setting
	#or changing the value of the label 
	block setTitle(text)
		setLabel(text)
		return this
	
	#Copy the selected text into the clipboard. If you want to specify which
	#clipboard to copy the text into you should call the 
	#@Block copyToClipboard(clipboard) instead
	#@Returns the copy value which is true if copy successfully and false
	#if copy fails @DataType BOOLEAN
	block copy()
		return __input_copy(WIDGETPOINTER, 1, true)
		
	#Use this block to copy the @Class FInput and inheriting classes into
	#a custom clipboard/@Class FClipboard which is just of two type 
	#>> the text clipboard
	#>> the cut clipboard
	#You can read more about the clipboard in @Class FClipboard
	#@Returns the copy value which is true if copy successfully and false
	#if copy fails @DataType BOOLEAN
	block copyToClipboard(clipboard)
		return __input_copy(WIDGETPOINTER, clipboard, true)
		
	#This block copies all the previous contiguous cuts from the undo 
	#information to the clipboard. This block implements the 
	#âˆ§K shortcut key. You might want to call @Block copy() instead.
	#@Returns the copy value which is true if copy successfully and false
	#if copy fails @DataType BOOLEAN
	block copyCut()
		return __input_copy(WIDGETPOINTER, null, false)	

	#Change the color of the @Class FInput and it inheriting classes
	#caret/cursor color. This block accept the @Class FColor or the 
	#absolute @DataType NUMBER value of the color which is then cast to
	#a new instance to the @Class FColor
	#@Note It @Returns this which is the widget to allow the in-line usage 
	#of the widget
	block setCursorColor(color)	
		try {
			color.getColor() WIDGET_CURSOR_COLOR = color
		catch
			WIDGET_CURSOR_COLOR = new FColor
			WIDGET_CURSOR_COLOR.setColorValue(color)
		}
		__set_input_cursor_color(WIDGETPOINTER, WIDGET_CURSOR_COLOR.getColor())
		return this
		
	#Get the caret/cursor color of this widget 
	#@Return the caret/cursor color in form of the @Class FColor to 
	#support and allow more color usage
	block getCursorColor()
		return WIDGET_CURSOR_COLOR
		
	block cut()
		return __input_copy(WIDGETPOINTER, null, null, 1)
	
	#all the private attributes, fields and block not accessible #outside the class
	private 
		
		#Create an instance of the FInput Widget with custom width
		#and height to avoid invisible @Class FInput
		block initialize()
			WIDGETPOINTER = __init_input(WIDGET_X, WIDGET_Y, WIDGET_WIDTH, WIDGET_HEIGHT)
	
	
	
	
	
	
	
	