/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 SIMPLE

*/

/* 
 * @Filename - FMenuItem.sim
 * @Author - Azeez Adewale
 * @Date - 14 March 2018
 * @Time - 06:35 PM
 *
 */

module fulltick.widget.menu

#call the @Class FMenu File for blocks inheritance
call "fulltick/widget/menu/FMenu.sim" ? fulltick.widget.menu
call "fulltick/core/FWidget.sim" ? fulltick.core

#This @Class FMenuBar @Skip
#  ________________________________________________________
# |________________________________________________________|
#@EndSkip @Image FMenuItem
class FMenuItem : FMenu

	MENU_WIDGET_VALUE = ""
	
	/* POINTERS AND CLASSES */
	MENU_WIDGET_USER_DATA = null #the user data for the menu
	
	/* NUMBER */
	MENU_WIDGET_FLAG = 0 #the type of the menu item 
	
	/* BOOLEAN */
	MENU_WIDGET_IS_SUB_MENU = false #to set whether this menu widget is submenu
	
	/* BOOLEAN */
	MENU_WIDGET_ITEMS_LIST = [] #all the list of menu items in the widget and itself

	#initialize the @Class MenuItem with a defined value which will be 
	#rendered on the @Class MenuBar and it parent @Class MenuItem
	block FMenuItem(name)
		MENU_WIDGET_VALUE = name
		initialize()
		
	#Get the value of the @Class MenuItem 
	#@Return the widget value @DataType STRING
	block getValue()
		return MENU_WIDGET_VALUE
		
	block getItems()
		return MENU_WIDGET_ITEMS_LIST
		
	#add sub menu items to the current @Class MenuItem also this block
	#accept list of @Class MenuItem and Strings to be added to the parent
	#menu item
	#@Note It @Returns this which is the widget to allow the in-line usage 
	#of the menu
	#@Note In no case whatsoever should this block be used in line like
	#obj.addItem(menuitem).addItem(menuitem) it does not work for now 
	#to be resolved later
	block addItem(menuitem)
		MENU_WIDGET_IS_SUB_MENU = true 
		if (isList(menuitem)) 
			for a = 0 to lengthOf(menuitem) 
				try 
					menuitem[a].check()
					add(MENU_WIDGET_ITEMS_LIST,menuitem[a])
				catch 
					addItemRaw(getValue()+"/"+menuitem[a])
				end
			end
		else 
			try 
				menuitem.check()
				add(MENU_WIDGET_ITEMS_LIST,menuitem)
			catch
				addItemRaw(getValue()+"/"+menuitem)
			end
		end
		return this
		
	block addItemRaw(menuitem)
		temp = new FMenuItem(menuitem) 
		add(MENU_WIDGET_ITEMS_LIST,temp)
		
	block setUserData(userdata)
		MENU_WIDGET_USER_DATA = userdata
		
	block getUserData()
		return MENU_WIDGET_USER_DATA
		
	block setFlag(flag)
		MENU_WIDGET_FLAG = flag
		
	block getFlag()
		return MENU_WIDGET_FLAG
		
		
	#all the private attributes, fields and block not accessible outside
	#the class
	private 
		
		block initialize()
			WIDGETPOINTER = __init_menu_item("")
	
		#this block is used to confirm the item sent into the 
		#@Block addItem(menuitem) is an instance of @Class FMenuItem
		block check()
		