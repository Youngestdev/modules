/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com"> 
	MIT License Copyright (c) 2018 SIMPLE

*/

/* 
 * @Filename - FButton.sim
 * @Author - Azeez Adewale
 * @Date - 21 Febuary 2018
 * @Time - 12:00 PM
 */

module fulltick.widget

#call the @Class FBox File for blocks inheritance
call "fulltick/widget/FBox.sim" ? fulltick.core

#The @Class FLabel is a child class inheriting
#Most of it blocks from the @Class FBox widget the different between this 
#widget and the parent widget @Class FBox is that the size of the 
#@Class FLabel is in regard to the label it contains and the size is updated
#by implementing the @Block notifyWidget() to set the size of the widget 
#in accordance to the label content
#some block are available only for this widget. The Widget is use to draw
#Box/Panel widget on a parent widget @Skip
#  _________________
# |					|  #################
# |		LABEL		|  ######LABEL######
# |_________________|  #################
# @EndSkip
#The FBox instance can be call as much time as possible a
class FButton: FBox

	/* NUMBERS */
	
	WIDGET_WIDTH = 130 #Change the default width to avoid the button been rendered like a label
	WIDGET_HEIGHT = 30 #Change the default height to avoid the button been rendered like a label
	WIDGET_DOWN_BOX = 5 #The default button that is drawn when the button is clicked 'FBOX_DOWN_FRAME'
	WIDGET_DOWN_BACKGROUND_COLOR = 32 #The background color of the drawn button when this button widget is pressed

	#Initialize the @Class FButton widget with a label value/content
	block FButton(label)
		initialize()
		setLabel(label)
		
	block setDownBox(box)
		__set_button_down_box(WIDGETPOINTER, box)
		return this
		
	block setDownBoxBackground(color)
		try {
			color.getColor() WIDGET_DOWN_BACKGROUND_COLOR = color
		catch
			WIDGET_DOWN_BACKGROUND_COLOR = new FColor
			WIDGET_DOWN_BACKGROUND_COLOR.setColorValue(color)
		}
		__set_button_down_color(WIDGETPOINTER, WIDGET_DOWN_BACKGROUND_COLOR.getColor())
		redrawParent() notifyWidget()
		return this
		
	#Get the background color of the button down
	#@Returns widget button down color background color in form of the
	#@Class FColor to support and allow more color usage
	block getDownBoxBackgroundColor()
		return WIDGET_BACKGROUND_COLOR
	
	#all the private attributes, fields and block not accessible outside
	#the class
	private 
		
		#Create an instance of the FButton Widget with a custom width 
		#and height to avoid being rendered like a @Class FLabel
		block initialize()
			WIDGETPOINTER = __init_button(WIDGET_X, WIDGET_Y, WIDGET_WIDTH, WIDGET_HEIGHT)
		
		
		
		
		
		
		